name: Build, Test, Scan and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.image_name.outputs.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set image name
        id: image_name
        run: echo "name=devops-toolset" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: docker build -t ${{ steps.image_name.outputs.name }} .

      - name: Save Docker image
        run: docker save -o ${{ steps.image_name.outputs.name }}.tar ${{ steps.image_name.outputs.name }}

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.image_name.outputs.name }}
          path: ${{ steps.image_name.outputs.name }}.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.image_name }}

      - name: Load Docker image
        run: docker load -i ${{ needs.build.outputs.image_name }}.tar

      - name: Run tests
        run: docker run --rm -v ${{ github.workspace }}/test:/test ${{ needs.build.outputs.image_name }} /test/verify_tools.sh

  scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.image_name }}

      - name: Load Docker image
        run: docker load -i ${{ needs.build.outputs.image_name }}.tar

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ needs.build.outputs.image_name }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  push_to_registry:
    runs-on: ubuntu-latest
    needs: [test, scan]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.image_name }}

      - name: Load Docker image
        run: docker load -i ${{ needs.build.outputs.image_name }}.tar

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase repository name
        id: string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ steps.string.outputs.lowercase }}

      - name: Tag and push
        run: |
          docker tag ${{ needs.build.outputs.image_name }} ${{ steps.meta.outputs.tags }}
          docker push ${{ steps.meta.outputs.tags }}